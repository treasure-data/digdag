timezone: UTC

# If you haven't checked python_args.dig, please check it first.

+builtin: {
  # You can use some built-in parameters
  sh>: echo workflow is running for ${session_time}
}

+simple: {
  # Local parameters are only for this task.
  py>: examples.params.simple
  data: "local data"
  number: "local number"
}

+export_params_1: {
  # If you export parameters, subtasks can share it.
  # This is useful to share configuration such as user & password.
  _export: {
    mysql: {"user": "exported"}
  }

  # This "step1" can use "mysql" parameter
  +step1: {
    py>: examples.params.export_params_step1
  }


  # This "step2" can use "mysql" parameter in addition to
  # local "table" parameter
  +step2: {
    py>: examples.params.export_params_step2
    table: "local table"
  }

  # If a subtask exports a parameter with the same name, following
  # subtasks will use overwritten values.
  +export_overwrite: {
    _export: {
      mysql: {"user": "overwrite"}
    }

    # This task will see overwritten value.
    +nested: {
      py>: examples.params.export_overwrite
    }
  }


  # Overwritten parameters affect only subtasks. This "step3" task
  # is NOT affected by +export_overwrite because this is not a
  # subtask of +export_overwrite.
  +step3: {
    py>: examples.params.export_params_step3
  }

# To carry parameters to dependent tasks, you can set parameters
# to "digdag.task.export_params". Those export_params are global
# parameters that affect all following tasks.
+export_params_2: {
  +set_export: {
    py>: examples.params.set_export
  }

  # dependent tasks use carried parameters
  +dependent1: {
    py>: examples.params.show_export
  }
}

# all following dependent tasks also use carried parameters
+dependent2: {
  py>: examples.params.show_export
}

